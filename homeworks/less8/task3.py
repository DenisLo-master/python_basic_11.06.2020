"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
 введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться."""


class My_ValueError(Exception):
    def __str__(self):
        return f'ОШИБКА: Введите целое положительное число'


list_numbers = []
input_list = True


def in_to_list(text):
    if not str(text).isdigit() and text != 'stop':
        raise My_ValueError
    elif text == 'stop':
        global input_list
        input_list = False
    else:
        list_numbers.append(int(text))


while input_list == True:
    try:
        in_to_list(input('Введите число: '))
    except My_ValueError as e:
        print(e)
print(list_numbers)
